// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/accounty.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "go.appointy.com/chaku/validate"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Gender int32

const (
	Gender_UNSPECIFIED Gender = 0
	Gender_MALE        Gender = 1
	Gender_FEMALE      Gender = 2
)

var Gender_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "MALE",
	2: "FEMALE",
}

var Gender_value = map[string]int32{
	"UNSPECIFIED": 0,
	"MALE":        1,
	"FEMALE":      2,
}

func (x Gender) String() string {
	return proto.EnumName(Gender_name, int32(x))
}

func (Gender) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_93ad3c2f790a2710, []int{0}
}

type AccountingIntegrationType int32

const (
	AccountingIntegrationType_UNDEFINED  AccountingIntegrationType = 0
	AccountingIntegrationType_QUICKBOOKS AccountingIntegrationType = 1
	AccountingIntegrationType_XERO       AccountingIntegrationType = 2
	AccountingIntegrationType_FRESHBOOK  AccountingIntegrationType = 3
)

var AccountingIntegrationType_name = map[int32]string{
	0: "UNDEFINED",
	1: "QUICKBOOKS",
	2: "XERO",
	3: "FRESHBOOK",
}

var AccountingIntegrationType_value = map[string]int32{
	"UNDEFINED":  0,
	"QUICKBOOKS": 1,
	"XERO":       2,
	"FRESHBOOK":  3,
}

func (x AccountingIntegrationType) String() string {
	return proto.EnumName(AccountingIntegrationType_name, int32(x))
}

func (AccountingIntegrationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_93ad3c2f790a2710, []int{1}
}

type AccoutingEmployeeLink struct {
	Id                   string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AppointyId           string                    `protobuf:"bytes,2,opt,name=appointyId,proto3" json:"appointyId,omitempty"`
	ExternalId           string                    `protobuf:"bytes,3,opt,name=externalId,proto3" json:"externalId,omitempty"`
	AppType              AccountingIntegrationType `protobuf:"varint,4,opt,name=AppType,proto3,enum=appointy.accouting.v1.AccountingIntegrationType" json:"AppType,omitempty"`
	Metadata             map[string]string         `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *AccoutingEmployeeLink) Reset()         { *m = AccoutingEmployeeLink{} }
func (m *AccoutingEmployeeLink) String() string { return proto.CompactTextString(m) }
func (*AccoutingEmployeeLink) ProtoMessage()    {}
func (*AccoutingEmployeeLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_93ad3c2f790a2710, []int{0}
}

func (m *AccoutingEmployeeLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccoutingEmployeeLink.Unmarshal(m, b)
}
func (m *AccoutingEmployeeLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccoutingEmployeeLink.Marshal(b, m, deterministic)
}
func (m *AccoutingEmployeeLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccoutingEmployeeLink.Merge(m, src)
}
func (m *AccoutingEmployeeLink) XXX_Size() int {
	return xxx_messageInfo_AccoutingEmployeeLink.Size(m)
}
func (m *AccoutingEmployeeLink) XXX_DiscardUnknown() {
	xxx_messageInfo_AccoutingEmployeeLink.DiscardUnknown(m)
}

var xxx_messageInfo_AccoutingEmployeeLink proto.InternalMessageInfo

func (m *AccoutingEmployeeLink) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AccoutingEmployeeLink) GetAppointyId() string {
	if m != nil {
		return m.AppointyId
	}
	return ""
}

func (m *AccoutingEmployeeLink) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *AccoutingEmployeeLink) GetAppType() AccountingIntegrationType {
	if m != nil {
		return m.AppType
	}
	return AccountingIntegrationType_UNDEFINED
}

func (m *AccoutingEmployeeLink) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type CreateEmployeeRequest struct {
	CompanyId            string                    `protobuf:"bytes,1,opt,name=companyId,proto3" json:"companyId,omitempty"`
	Employee             *Employee                 `protobuf:"bytes,2,opt,name=employee,proto3" json:"employee,omitempty"`
	AppType              AccountingIntegrationType `protobuf:"varint,3,opt,name=appType,proto3,enum=appointy.accouting.v1.AccountingIntegrationType" json:"appType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CreateEmployeeRequest) Reset()         { *m = CreateEmployeeRequest{} }
func (m *CreateEmployeeRequest) String() string { return proto.CompactTextString(m) }
func (*CreateEmployeeRequest) ProtoMessage()    {}
func (*CreateEmployeeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_93ad3c2f790a2710, []int{1}
}

func (m *CreateEmployeeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEmployeeRequest.Unmarshal(m, b)
}
func (m *CreateEmployeeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEmployeeRequest.Marshal(b, m, deterministic)
}
func (m *CreateEmployeeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEmployeeRequest.Merge(m, src)
}
func (m *CreateEmployeeRequest) XXX_Size() int {
	return xxx_messageInfo_CreateEmployeeRequest.Size(m)
}
func (m *CreateEmployeeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEmployeeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEmployeeRequest proto.InternalMessageInfo

func (m *CreateEmployeeRequest) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *CreateEmployeeRequest) GetEmployee() *Employee {
	if m != nil {
		return m.Employee
	}
	return nil
}

func (m *CreateEmployeeRequest) GetAppType() AccountingIntegrationType {
	if m != nil {
		return m.AppType
	}
	return AccountingIntegrationType_UNDEFINED
}

type DeleteEmployeeRequest struct {
	CompanyId            string                    `protobuf:"bytes,1,opt,name=companyId,proto3" json:"companyId,omitempty"`
	AppointyEmployeeId   string                    `protobuf:"bytes,2,opt,name=appointyEmployeeId,proto3" json:"appointyEmployeeId,omitempty"`
	AppType              AccountingIntegrationType `protobuf:"varint,3,opt,name=appType,proto3,enum=appointy.accouting.v1.AccountingIntegrationType" json:"appType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *DeleteEmployeeRequest) Reset()         { *m = DeleteEmployeeRequest{} }
func (m *DeleteEmployeeRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteEmployeeRequest) ProtoMessage()    {}
func (*DeleteEmployeeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_93ad3c2f790a2710, []int{2}
}

func (m *DeleteEmployeeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteEmployeeRequest.Unmarshal(m, b)
}
func (m *DeleteEmployeeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteEmployeeRequest.Marshal(b, m, deterministic)
}
func (m *DeleteEmployeeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteEmployeeRequest.Merge(m, src)
}
func (m *DeleteEmployeeRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteEmployeeRequest.Size(m)
}
func (m *DeleteEmployeeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteEmployeeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteEmployeeRequest proto.InternalMessageInfo

func (m *DeleteEmployeeRequest) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *DeleteEmployeeRequest) GetAppointyEmployeeId() string {
	if m != nil {
		return m.AppointyEmployeeId
	}
	return ""
}

func (m *DeleteEmployeeRequest) GetAppType() AccountingIntegrationType {
	if m != nil {
		return m.AppType
	}
	return AccountingIntegrationType_UNDEFINED
}

type CreateBusinessHourRequest struct {
	CompanyId            string                    `protobuf:"bytes,1,opt,name=companyId,proto3" json:"companyId,omitempty"`
	BusinessHour         *BusinessHour             `protobuf:"bytes,2,opt,name=businessHour,proto3" json:"businessHour,omitempty"`
	AppType              AccountingIntegrationType `protobuf:"varint,3,opt,name=appType,proto3,enum=appointy.accouting.v1.AccountingIntegrationType" json:"appType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CreateBusinessHourRequest) Reset()         { *m = CreateBusinessHourRequest{} }
func (m *CreateBusinessHourRequest) String() string { return proto.CompactTextString(m) }
func (*CreateBusinessHourRequest) ProtoMessage()    {}
func (*CreateBusinessHourRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_93ad3c2f790a2710, []int{3}
}

func (m *CreateBusinessHourRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBusinessHourRequest.Unmarshal(m, b)
}
func (m *CreateBusinessHourRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBusinessHourRequest.Marshal(b, m, deterministic)
}
func (m *CreateBusinessHourRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBusinessHourRequest.Merge(m, src)
}
func (m *CreateBusinessHourRequest) XXX_Size() int {
	return xxx_messageInfo_CreateBusinessHourRequest.Size(m)
}
func (m *CreateBusinessHourRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBusinessHourRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBusinessHourRequest proto.InternalMessageInfo

func (m *CreateBusinessHourRequest) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *CreateBusinessHourRequest) GetBusinessHour() *BusinessHour {
	if m != nil {
		return m.BusinessHour
	}
	return nil
}

func (m *CreateBusinessHourRequest) GetAppType() AccountingIntegrationType {
	if m != nil {
		return m.AppType
	}
	return AccountingIntegrationType_UNDEFINED
}

type DeleteBusinessHourRequest struct {
	CompanyId            string                    `protobuf:"bytes,1,opt,name=companyId,proto3" json:"companyId,omitempty"`
	AppointyEmployeeId   string                    `protobuf:"bytes,2,opt,name=appointyEmployeeId,proto3" json:"appointyEmployeeId,omitempty"`
	AppType              AccountingIntegrationType `protobuf:"varint,3,opt,name=appType,proto3,enum=appointy.accouting.v1.AccountingIntegrationType" json:"appType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *DeleteBusinessHourRequest) Reset()         { *m = DeleteBusinessHourRequest{} }
func (m *DeleteBusinessHourRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteBusinessHourRequest) ProtoMessage()    {}
func (*DeleteBusinessHourRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_93ad3c2f790a2710, []int{4}
}

func (m *DeleteBusinessHourRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBusinessHourRequest.Unmarshal(m, b)
}
func (m *DeleteBusinessHourRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBusinessHourRequest.Marshal(b, m, deterministic)
}
func (m *DeleteBusinessHourRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBusinessHourRequest.Merge(m, src)
}
func (m *DeleteBusinessHourRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteBusinessHourRequest.Size(m)
}
func (m *DeleteBusinessHourRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBusinessHourRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBusinessHourRequest proto.InternalMessageInfo

func (m *DeleteBusinessHourRequest) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *DeleteBusinessHourRequest) GetAppointyEmployeeId() string {
	if m != nil {
		return m.AppointyEmployeeId
	}
	return ""
}

func (m *DeleteBusinessHourRequest) GetAppType() AccountingIntegrationType {
	if m != nil {
		return m.AppType
	}
	return AccountingIntegrationType_UNDEFINED
}

type CreatePrepaidAppointmentRequest struct {
	CompanyId            string              `protobuf:"bytes,1,opt,name=companyId,proto3" json:"companyId,omitempty"`
	PrepaidAppointment   *PrepaidAppointment `protobuf:"bytes,2,opt,name=prepaidAppointment,proto3" json:"prepaidAppointment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CreatePrepaidAppointmentRequest) Reset()         { *m = CreatePrepaidAppointmentRequest{} }
func (m *CreatePrepaidAppointmentRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePrepaidAppointmentRequest) ProtoMessage()    {}
func (*CreatePrepaidAppointmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_93ad3c2f790a2710, []int{5}
}

func (m *CreatePrepaidAppointmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePrepaidAppointmentRequest.Unmarshal(m, b)
}
func (m *CreatePrepaidAppointmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePrepaidAppointmentRequest.Marshal(b, m, deterministic)
}
func (m *CreatePrepaidAppointmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePrepaidAppointmentRequest.Merge(m, src)
}
func (m *CreatePrepaidAppointmentRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePrepaidAppointmentRequest.Size(m)
}
func (m *CreatePrepaidAppointmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePrepaidAppointmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePrepaidAppointmentRequest proto.InternalMessageInfo

func (m *CreatePrepaidAppointmentRequest) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *CreatePrepaidAppointmentRequest) GetPrepaidAppointment() *PrepaidAppointment {
	if m != nil {
		return m.PrepaidAppointment
	}
	return nil
}

type CancelNRefPrepaidAppointmentRequest struct {
	CompanyId            string              `protobuf:"bytes,1,opt,name=companyId,proto3" json:"companyId,omitempty"`
	PrepaidAppointment   *PrepaidAppointment `protobuf:"bytes,2,opt,name=prepaidAppointment,proto3" json:"prepaidAppointment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CancelNRefPrepaidAppointmentRequest) Reset()         { *m = CancelNRefPrepaidAppointmentRequest{} }
func (m *CancelNRefPrepaidAppointmentRequest) String() string { return proto.CompactTextString(m) }
func (*CancelNRefPrepaidAppointmentRequest) ProtoMessage()    {}
func (*CancelNRefPrepaidAppointmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_93ad3c2f790a2710, []int{6}
}

func (m *CancelNRefPrepaidAppointmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelNRefPrepaidAppointmentRequest.Unmarshal(m, b)
}
func (m *CancelNRefPrepaidAppointmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelNRefPrepaidAppointmentRequest.Marshal(b, m, deterministic)
}
func (m *CancelNRefPrepaidAppointmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelNRefPrepaidAppointmentRequest.Merge(m, src)
}
func (m *CancelNRefPrepaidAppointmentRequest) XXX_Size() int {
	return xxx_messageInfo_CancelNRefPrepaidAppointmentRequest.Size(m)
}
func (m *CancelNRefPrepaidAppointmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelNRefPrepaidAppointmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelNRefPrepaidAppointmentRequest proto.InternalMessageInfo

func (m *CancelNRefPrepaidAppointmentRequest) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *CancelNRefPrepaidAppointmentRequest) GetPrepaidAppointment() *PrepaidAppointment {
	if m != nil {
		return m.PrepaidAppointment
	}
	return nil
}

type CreateCustomerRequest struct {
	CompanyId            string                    `protobuf:"bytes,1,opt,name=companyId,proto3" json:"companyId,omitempty"`
	Customer             *Customer                 `protobuf:"bytes,2,opt,name=customer,proto3" json:"customer,omitempty"`
	AppType              AccountingIntegrationType `protobuf:"varint,3,opt,name=appType,proto3,enum=appointy.accouting.v1.AccountingIntegrationType" json:"appType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CreateCustomerRequest) Reset()         { *m = CreateCustomerRequest{} }
func (m *CreateCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCustomerRequest) ProtoMessage()    {}
func (*CreateCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_93ad3c2f790a2710, []int{7}
}

func (m *CreateCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCustomerRequest.Unmarshal(m, b)
}
func (m *CreateCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCustomerRequest.Marshal(b, m, deterministic)
}
func (m *CreateCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCustomerRequest.Merge(m, src)
}
func (m *CreateCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCustomerRequest.Size(m)
}
func (m *CreateCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCustomerRequest proto.InternalMessageInfo

func (m *CreateCustomerRequest) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *CreateCustomerRequest) GetCustomer() *Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (m *CreateCustomerRequest) GetAppType() AccountingIntegrationType {
	if m != nil {
		return m.AppType
	}
	return AccountingIntegrationType_UNDEFINED
}

type RemoveCustomerRequest struct {
	CompanyId            string    `protobuf:"bytes,1,opt,name=companyId,proto3" json:"companyId,omitempty"`
	Customer             *Customer `protobuf:"bytes,2,opt,name=customer,proto3" json:"customer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RemoveCustomerRequest) Reset()         { *m = RemoveCustomerRequest{} }
func (m *RemoveCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveCustomerRequest) ProtoMessage()    {}
func (*RemoveCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_93ad3c2f790a2710, []int{8}
}

func (m *RemoveCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveCustomerRequest.Unmarshal(m, b)
}
func (m *RemoveCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveCustomerRequest.Marshal(b, m, deterministic)
}
func (m *RemoveCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveCustomerRequest.Merge(m, src)
}
func (m *RemoveCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveCustomerRequest.Size(m)
}
func (m *RemoveCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveCustomerRequest proto.InternalMessageInfo

func (m *RemoveCustomerRequest) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *RemoveCustomerRequest) GetCustomer() *Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

type UpdateCustomerRequest struct {
	CompanyId            string    `protobuf:"bytes,1,opt,name=companyId,proto3" json:"companyId,omitempty"`
	Customer             *Customer `protobuf:"bytes,2,opt,name=customer,proto3" json:"customer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateCustomerRequest) Reset()         { *m = UpdateCustomerRequest{} }
func (m *UpdateCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCustomerRequest) ProtoMessage()    {}
func (*UpdateCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_93ad3c2f790a2710, []int{9}
}

func (m *UpdateCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCustomerRequest.Unmarshal(m, b)
}
func (m *UpdateCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCustomerRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCustomerRequest.Merge(m, src)
}
func (m *UpdateCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCustomerRequest.Size(m)
}
func (m *UpdateCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCustomerRequest proto.InternalMessageInfo

func (m *UpdateCustomerRequest) GetCompanyId() string {
	if m != nil {
		return m.CompanyId
	}
	return ""
}

func (m *UpdateCustomerRequest) GetCustomer() *Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

type CreateInventoryRequest struct {
	CompanyID            string                    `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	Inventory            *Inventory                `protobuf:"bytes,2,opt,name=inventory,proto3" json:"inventory,omitempty"`
	AppType              AccountingIntegrationType `protobuf:"varint,3,opt,name=appType,proto3,enum=appointy.accouting.v1.AccountingIntegrationType" json:"appType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CreateInventoryRequest) Reset()         { *m = CreateInventoryRequest{} }
func (m *CreateInventoryRequest) String() string { return proto.CompactTextString(m) }
func (*CreateInventoryRequest) ProtoMessage()    {}
func (*CreateInventoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_93ad3c2f790a2710, []int{10}
}

func (m *CreateInventoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateInventoryRequest.Unmarshal(m, b)
}
func (m *CreateInventoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateInventoryRequest.Marshal(b, m, deterministic)
}
func (m *CreateInventoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateInventoryRequest.Merge(m, src)
}
func (m *CreateInventoryRequest) XXX_Size() int {
	return xxx_messageInfo_CreateInventoryRequest.Size(m)
}
func (m *CreateInventoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateInventoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateInventoryRequest proto.InternalMessageInfo

func (m *CreateInventoryRequest) GetCompanyID() string {
	if m != nil {
		return m.CompanyID
	}
	return ""
}

func (m *CreateInventoryRequest) GetInventory() *Inventory {
	if m != nil {
		return m.Inventory
	}
	return nil
}

func (m *CreateInventoryRequest) GetAppType() AccountingIntegrationType {
	if m != nil {
		return m.AppType
	}
	return AccountingIntegrationType_UNDEFINED
}

type Employee struct {
	// Id of employee
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// appointy id
	AppointyId string `protobuf:"bytes,2,opt,name=appointyId,proto3" json:"appointyId,omitempty"`
	// First Name of the employee
	FirstName string `protobuf:"bytes,3,opt,name=firstName,proto3" json:"firstName,omitempty"`
	// Last Name of the employee
	LastName string `protobuf:"bytes,4,opt,name=lastName,proto3" json:"lastName,omitempty"`
	// Unique Email of the employee
	Email string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	// Url of the profile image
	ProfileImage string `protobuf:"bytes,6,opt,name=profileImage,proto3" json:"profileImage,omitempty"`
	// Gender of the employee
	Gender Gender `protobuf:"varint,7,opt,name=gender,proto3,enum=appointy.accouting.v1.Gender" json:"gender,omitempty"`
	// employee Number of the employee
	EmployeeNumber string `protobuf:"bytes,8,opt,name=employeeNumber,proto3" json:"employeeNumber,omitempty"`
	// phone Number of the employee
	PhoneNumber string `protobuf:"bytes,9,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	// department of employee
	Department string `protobuf:"bytes,10,opt,name=department,proto3" json:"department,omitempty"`
	// designation of the employee
	Designation string `protobuf:"bytes,11,opt,name=designation,proto3" json:"designation,omitempty"`
	// Additional data of employee
	Metadata map[string]string `protobuf:"bytes,12,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Date on which employee was hired
	HireDate             *timestamp.Timestamp `protobuf:"bytes,13,opt,name=hireDate,proto3" json:"hireDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Employee) Reset()         { *m = Employee{} }
func (m *Employee) String() string { return proto.CompactTextString(m) }
func (*Employee) ProtoMessage()    {}
func (*Employee) Descriptor() ([]byte, []int) {
	return fileDescriptor_93ad3c2f790a2710, []int{11}
}

func (m *Employee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Employee.Unmarshal(m, b)
}
func (m *Employee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Employee.Marshal(b, m, deterministic)
}
func (m *Employee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Employee.Merge(m, src)
}
func (m *Employee) XXX_Size() int {
	return xxx_messageInfo_Employee.Size(m)
}
func (m *Employee) XXX_DiscardUnknown() {
	xxx_messageInfo_Employee.DiscardUnknown(m)
}

var xxx_messageInfo_Employee proto.InternalMessageInfo

func (m *Employee) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Employee) GetAppointyId() string {
	if m != nil {
		return m.AppointyId
	}
	return ""
}

func (m *Employee) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Employee) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Employee) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Employee) GetProfileImage() string {
	if m != nil {
		return m.ProfileImage
	}
	return ""
}

func (m *Employee) GetGender() Gender {
	if m != nil {
		return m.Gender
	}
	return Gender_UNSPECIFIED
}

func (m *Employee) GetEmployeeNumber() string {
	if m != nil {
		return m.EmployeeNumber
	}
	return ""
}

func (m *Employee) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *Employee) GetDepartment() string {
	if m != nil {
		return m.Department
	}
	return ""
}

func (m *Employee) GetDesignation() string {
	if m != nil {
		return m.Designation
	}
	return ""
}

func (m *Employee) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Employee) GetHireDate() *timestamp.Timestamp {
	if m != nil {
		return m.HireDate
	}
	return nil
}

type BusinessHour struct {
	AppointyEmployeeId string `protobuf:"bytes,1,opt,name=appointyEmployeeId,proto3" json:"appointyEmployeeId,omitempty"`
	EmployeeId         string `protobuf:"bytes,2,opt,name=employeeId,proto3" json:"employeeId,omitempty"`
	//time at which work starts
	CreateDate *timestamp.Timestamp `protobuf:"bytes,3,opt,name=createDate,proto3" json:"createDate,omitempty"`
	//name of staff.
	Name string `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	//description
	Description string `protobuf:"bytes,5,opt,name=Description,proto3" json:"Description,omitempty"`
	//total time of work
	TotalTime            string   `protobuf:"bytes,6,opt,name=TotalTime,proto3" json:"TotalTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BusinessHour) Reset()         { *m = BusinessHour{} }
func (m *BusinessHour) String() string { return proto.CompactTextString(m) }
func (*BusinessHour) ProtoMessage()    {}
func (*BusinessHour) Descriptor() ([]byte, []int) {
	return fileDescriptor_93ad3c2f790a2710, []int{12}
}

func (m *BusinessHour) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BusinessHour.Unmarshal(m, b)
}
func (m *BusinessHour) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BusinessHour.Marshal(b, m, deterministic)
}
func (m *BusinessHour) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BusinessHour.Merge(m, src)
}
func (m *BusinessHour) XXX_Size() int {
	return xxx_messageInfo_BusinessHour.Size(m)
}
func (m *BusinessHour) XXX_DiscardUnknown() {
	xxx_messageInfo_BusinessHour.DiscardUnknown(m)
}

var xxx_messageInfo_BusinessHour proto.InternalMessageInfo

func (m *BusinessHour) GetAppointyEmployeeId() string {
	if m != nil {
		return m.AppointyEmployeeId
	}
	return ""
}

func (m *BusinessHour) GetEmployeeId() string {
	if m != nil {
		return m.EmployeeId
	}
	return ""
}

func (m *BusinessHour) GetCreateDate() *timestamp.Timestamp {
	if m != nil {
		return m.CreateDate
	}
	return nil
}

func (m *BusinessHour) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BusinessHour) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *BusinessHour) GetTotalTime() string {
	if m != nil {
		return m.TotalTime
	}
	return ""
}

type PrepaidAppointment struct {
	//Id of account or type of account
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	//appointy Id
	AppointyId string `protobuf:"bytes,2,opt,name=appointyId,proto3" json:"appointyId,omitempty"`
	//advanced paid or not
	PaymentStatus bool `protobuf:"varint,3,opt,name=PaymentStatus,proto3" json:"PaymentStatus,omitempty"`
	//Account ID
	DepositeAccId string `protobuf:"bytes,4,opt,name=DepositeAccId,proto3" json:"DepositeAccId,omitempty"`
	//CustomerId who made the payment
	CustomerId string `protobuf:"bytes,5,opt,name=CustomerId,proto3" json:"CustomerId,omitempty"`
	// Total transaction amount
	TotalAmount string `protobuf:"bytes,6,opt,name=TotalAmount,proto3" json:"TotalAmount,omitempty"`
	// Reference of the currency
	CurrencyRef string `protobuf:"bytes,7,opt,name=CurrencyRef,proto3" json:"CurrencyRef,omitempty"`
	//Customer status for transaction
	CustomerStatus string `protobuf:"bytes,8,opt,name=CustomerStatus,proto3" json:"CustomerStatus,omitempty"`
	// Synctoken for granting only one user at a time.
	SyncToken string `protobuf:"bytes,9,opt,name=SyncToken,proto3" json:"SyncToken,omitempty"`
	//Date on which payment occured.
	CreateDate *timestamp.Timestamp `protobuf:"bytes,10,opt,name=createDate,proto3" json:"createDate,omitempty"`
	// Additional data of account
	Metadata             map[string]string `protobuf:"bytes,11,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PrepaidAppointment) Reset()         { *m = PrepaidAppointment{} }
func (m *PrepaidAppointment) String() string { return proto.CompactTextString(m) }
func (*PrepaidAppointment) ProtoMessage()    {}
func (*PrepaidAppointment) Descriptor() ([]byte, []int) {
	return fileDescriptor_93ad3c2f790a2710, []int{13}
}

func (m *PrepaidAppointment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepaidAppointment.Unmarshal(m, b)
}
func (m *PrepaidAppointment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepaidAppointment.Marshal(b, m, deterministic)
}
func (m *PrepaidAppointment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepaidAppointment.Merge(m, src)
}
func (m *PrepaidAppointment) XXX_Size() int {
	return xxx_messageInfo_PrepaidAppointment.Size(m)
}
func (m *PrepaidAppointment) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepaidAppointment.DiscardUnknown(m)
}

var xxx_messageInfo_PrepaidAppointment proto.InternalMessageInfo

func (m *PrepaidAppointment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PrepaidAppointment) GetAppointyId() string {
	if m != nil {
		return m.AppointyId
	}
	return ""
}

func (m *PrepaidAppointment) GetPaymentStatus() bool {
	if m != nil {
		return m.PaymentStatus
	}
	return false
}

func (m *PrepaidAppointment) GetDepositeAccId() string {
	if m != nil {
		return m.DepositeAccId
	}
	return ""
}

func (m *PrepaidAppointment) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func (m *PrepaidAppointment) GetTotalAmount() string {
	if m != nil {
		return m.TotalAmount
	}
	return ""
}

func (m *PrepaidAppointment) GetCurrencyRef() string {
	if m != nil {
		return m.CurrencyRef
	}
	return ""
}

func (m *PrepaidAppointment) GetCustomerStatus() string {
	if m != nil {
		return m.CustomerStatus
	}
	return ""
}

func (m *PrepaidAppointment) GetSyncToken() string {
	if m != nil {
		return m.SyncToken
	}
	return ""
}

func (m *PrepaidAppointment) GetCreateDate() *timestamp.Timestamp {
	if m != nil {
		return m.CreateDate
	}
	return nil
}

func (m *PrepaidAppointment) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Customer struct {
	// Id of customer
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	//appointy Id correlation
	AppointyId string `protobuf:"bytes,2,opt,name=AppointyId,proto3" json:"AppointyId,omitempty"`
	// First Name of the customer
	FirstName string `protobuf:"bytes,3,opt,name=firstName,proto3" json:"firstName,omitempty"`
	// Last Name of the customer
	LastName string `protobuf:"bytes,4,opt,name=lastName,proto3" json:"lastName,omitempty"`
	// Unique Email of the customer
	Email string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	// Gender of the customer
	Gender Gender `protobuf:"varint,6,opt,name=gender,proto3,enum=appointy.accouting.v1.Gender" json:"gender,omitempty"`
	// phone Number of the customer
	PhoneNumber string `protobuf:"bytes,7,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	// Account Number of customer
	Acctnum string `protobuf:"bytes,8,opt,name=acctnum,proto3" json:"acctnum,omitempty"`
	// Type of account the customer have
	Accttype string `protobuf:"bytes,9,opt,name=accttype,proto3" json:"accttype,omitempty"`
	//Soft deleting.
	VisState string `protobuf:"bytes,10,opt,name=VisState,proto3" json:"VisState,omitempty"`
	//name of organization customer is associated
	CustomerOrg string `protobuf:"bytes,11,opt,name=CustomerOrg,proto3" json:"CustomerOrg,omitempty"`
	// Date on which account of customer created
	CreateDate *timestamp.Timestamp `protobuf:"bytes,12,opt,name=createDate,proto3" json:"createDate,omitempty"`
	// Additional data of customer
	Metadata             map[string]string `protobuf:"bytes,13,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Customer) Reset()         { *m = Customer{} }
func (m *Customer) String() string { return proto.CompactTextString(m) }
func (*Customer) ProtoMessage()    {}
func (*Customer) Descriptor() ([]byte, []int) {
	return fileDescriptor_93ad3c2f790a2710, []int{14}
}

func (m *Customer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Customer.Unmarshal(m, b)
}
func (m *Customer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Customer.Marshal(b, m, deterministic)
}
func (m *Customer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Customer.Merge(m, src)
}
func (m *Customer) XXX_Size() int {
	return xxx_messageInfo_Customer.Size(m)
}
func (m *Customer) XXX_DiscardUnknown() {
	xxx_messageInfo_Customer.DiscardUnknown(m)
}

var xxx_messageInfo_Customer proto.InternalMessageInfo

func (m *Customer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Customer) GetAppointyId() string {
	if m != nil {
		return m.AppointyId
	}
	return ""
}

func (m *Customer) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Customer) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Customer) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Customer) GetGender() Gender {
	if m != nil {
		return m.Gender
	}
	return Gender_UNSPECIFIED
}

func (m *Customer) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *Customer) GetAcctnum() string {
	if m != nil {
		return m.Acctnum
	}
	return ""
}

func (m *Customer) GetAccttype() string {
	if m != nil {
		return m.Accttype
	}
	return ""
}

func (m *Customer) GetVisState() string {
	if m != nil {
		return m.VisState
	}
	return ""
}

func (m *Customer) GetCustomerOrg() string {
	if m != nil {
		return m.CustomerOrg
	}
	return ""
}

func (m *Customer) GetCreateDate() *timestamp.Timestamp {
	if m != nil {
		return m.CreateDate
	}
	return nil
}

func (m *Customer) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Inventory struct {
	//object indentifier
	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	//inventory id.
	InventoryId string `protobuf:"bytes,2,opt,name=InventoryId,proto3" json:"InventoryId,omitempty"`
	//name of the Item
	Name string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	//cost of Item
	ItemCost string `protobuf:"bytes,4,opt,name=ItemCost,proto3" json:"ItemCost,omitempty"`
	//purchase detail
	PurchaseDetail string `protobuf:"bytes,5,opt,name=PurchaseDetail,proto3" json:"PurchaseDetail,omitempty"`
	//Item description
	ItemDesc string `protobuf:"bytes,6,opt,name=ItemDesc,proto3" json:"ItemDesc,omitempty"`
	//Item deleted or remain in the list.
	ItemVisState string `protobuf:"bytes,7,opt,name=ItemVisState,proto3" json:"ItemVisState,omitempty"`
	// Synctoken for granting only one user at a time.
	SyncToken string `protobuf:"bytes,8,opt,name=SyncToken,proto3" json:"SyncToken,omitempty"`
	//Tax id for item.
	TxnId string `protobuf:"bytes,9,opt,name=TxnId,proto3" json:"TxnId,omitempty"`
	//Date on which date on which item Purchased.
	PurchaseDate *timestamp.Timestamp `protobuf:"bytes,10,opt,name=PurchaseDate,proto3" json:"PurchaseDate,omitempty"`
	// Additional data of item.
	Metadata             map[string]string `protobuf:"bytes,11,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Inventory) Reset()         { *m = Inventory{} }
func (m *Inventory) String() string { return proto.CompactTextString(m) }
func (*Inventory) ProtoMessage()    {}
func (*Inventory) Descriptor() ([]byte, []int) {
	return fileDescriptor_93ad3c2f790a2710, []int{15}
}

func (m *Inventory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Inventory.Unmarshal(m, b)
}
func (m *Inventory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Inventory.Marshal(b, m, deterministic)
}
func (m *Inventory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Inventory.Merge(m, src)
}
func (m *Inventory) XXX_Size() int {
	return xxx_messageInfo_Inventory.Size(m)
}
func (m *Inventory) XXX_DiscardUnknown() {
	xxx_messageInfo_Inventory.DiscardUnknown(m)
}

var xxx_messageInfo_Inventory proto.InternalMessageInfo

func (m *Inventory) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Inventory) GetInventoryId() string {
	if m != nil {
		return m.InventoryId
	}
	return ""
}

func (m *Inventory) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Inventory) GetItemCost() string {
	if m != nil {
		return m.ItemCost
	}
	return ""
}

func (m *Inventory) GetPurchaseDetail() string {
	if m != nil {
		return m.PurchaseDetail
	}
	return ""
}

func (m *Inventory) GetItemDesc() string {
	if m != nil {
		return m.ItemDesc
	}
	return ""
}

func (m *Inventory) GetItemVisState() string {
	if m != nil {
		return m.ItemVisState
	}
	return ""
}

func (m *Inventory) GetSyncToken() string {
	if m != nil {
		return m.SyncToken
	}
	return ""
}

func (m *Inventory) GetTxnId() string {
	if m != nil {
		return m.TxnId
	}
	return ""
}

func (m *Inventory) GetPurchaseDate() *timestamp.Timestamp {
	if m != nil {
		return m.PurchaseDate
	}
	return nil
}

func (m *Inventory) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func init() {
	proto.RegisterEnum("appointy.accouting.v1.Gender", Gender_name, Gender_value)
	proto.RegisterEnum("appointy.accouting.v1.AccountingIntegrationType", AccountingIntegrationType_name, AccountingIntegrationType_value)
	proto.RegisterType((*AccoutingEmployeeLink)(nil), "appointy.accouting.v1.AccoutingEmployeeLink")
	proto.RegisterMapType((map[string]string)(nil), "appointy.accouting.v1.AccoutingEmployeeLink.MetadataEntry")
	proto.RegisterType((*CreateEmployeeRequest)(nil), "appointy.accouting.v1.CreateEmployeeRequest")
	proto.RegisterType((*DeleteEmployeeRequest)(nil), "appointy.accouting.v1.DeleteEmployeeRequest")
	proto.RegisterType((*CreateBusinessHourRequest)(nil), "appointy.accouting.v1.CreateBusinessHourRequest")
	proto.RegisterType((*DeleteBusinessHourRequest)(nil), "appointy.accouting.v1.DeleteBusinessHourRequest")
	proto.RegisterType((*CreatePrepaidAppointmentRequest)(nil), "appointy.accouting.v1.CreatePrepaidAppointmentRequest")
	proto.RegisterType((*CancelNRefPrepaidAppointmentRequest)(nil), "appointy.accouting.v1.CancelNRefPrepaidAppointmentRequest")
	proto.RegisterType((*CreateCustomerRequest)(nil), "appointy.accouting.v1.CreateCustomerRequest")
	proto.RegisterType((*RemoveCustomerRequest)(nil), "appointy.accouting.v1.RemoveCustomerRequest")
	proto.RegisterType((*UpdateCustomerRequest)(nil), "appointy.accouting.v1.UpdateCustomerRequest")
	proto.RegisterType((*CreateInventoryRequest)(nil), "appointy.accouting.v1.CreateInventoryRequest")
	proto.RegisterType((*Employee)(nil), "appointy.accouting.v1.Employee")
	proto.RegisterMapType((map[string]string)(nil), "appointy.accouting.v1.Employee.MetadataEntry")
	proto.RegisterType((*BusinessHour)(nil), "appointy.accouting.v1.BusinessHour")
	proto.RegisterType((*PrepaidAppointment)(nil), "appointy.accouting.v1.PrepaidAppointment")
	proto.RegisterMapType((map[string]string)(nil), "appointy.accouting.v1.PrepaidAppointment.MetadataEntry")
	proto.RegisterType((*Customer)(nil), "appointy.accouting.v1.Customer")
	proto.RegisterMapType((map[string]string)(nil), "appointy.accouting.v1.Customer.MetadataEntry")
	proto.RegisterType((*Inventory)(nil), "appointy.accouting.v1.Inventory")
	proto.RegisterMapType((map[string]string)(nil), "appointy.accouting.v1.Inventory.MetadataEntry")
}

func init() { proto.RegisterFile("pb/accounty.proto", fileDescriptor_93ad3c2f790a2710) }

var fileDescriptor_93ad3c2f790a2710 = []byte{
	// 1443 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0xcd, 0x6f, 0x1b, 0x45,
	0x14, 0xf7, 0xda, 0x4e, 0x62, 0x3f, 0x27, 0x69, 0x18, 0x9a, 0xca, 0x35, 0x85, 0x46, 0x5b, 0x84,
	0x4a, 0x45, 0x9d, 0x10, 0x44, 0x41, 0xa9, 0x54, 0xc9, 0xb5, 0x9d, 0x76, 0xfb, 0x91, 0x04, 0x3b,
	0xa9, 0x0a, 0x17, 0x34, 0xde, 0x7d, 0x71, 0x56, 0xf1, 0x7e, 0x74, 0x77, 0x36, 0xaa, 0x4f, 0x48,
	0x5c, 0xe0, 0x6f, 0x00, 0x89, 0xff, 0x81, 0x03, 0x57, 0x0e, 0x1c, 0x38, 0x72, 0x40, 0xe2, 0x8f,
	0x80, 0x03, 0x67, 0x8e, 0x68, 0x76, 0x67, 0xd7, 0xeb, 0xb5, 0xd7, 0x1f, 0x90, 0x14, 0x6e, 0x3b,
	0xbf, 0x99, 0xf7, 0xde, 0xbc, 0xef, 0x79, 0x0b, 0xaf, 0xd9, 0x9d, 0x4d, 0xaa, 0xaa, 0x96, 0x67,
	0xb2, 0x7e, 0xd5, 0x76, 0x2c, 0x66, 0x91, 0x75, 0x6a, 0xdb, 0x96, 0xce, 0xd7, 0xfe, 0x06, 0xd3,
	0xcd, 0x6e, 0xf5, 0xec, 0xfd, 0xca, 0xf5, 0xae, 0x65, 0x75, 0x7b, 0xb8, 0xe9, 0x1f, 0xea, 0x78,
	0xc7, 0x9b, 0x4c, 0x37, 0xd0, 0x65, 0xd4, 0xb0, 0x03, 0xba, 0xca, 0x1b, 0xc9, 0x03, 0x68, 0xd8,
	0x21, 0xd3, 0xca, 0xe5, 0x33, 0xda, 0xd3, 0x35, 0xca, 0x70, 0x53, 0x3d, 0xa1, 0xa7, 0x5e, 0x80,
	0xca, 0xbf, 0x65, 0x61, 0xbd, 0x16, 0x0a, 0x69, 0x1a, 0x76, 0xcf, 0xea, 0x23, 0x3e, 0xd1, 0xcd,
	0x53, 0xb2, 0x0a, 0x59, 0x5d, 0x2b, 0x4b, 0x1b, 0xd2, 0xcd, 0x62, 0x2b, 0xab, 0x6b, 0xe4, 0x2d,
	0x80, 0xf0, 0x5a, 0x8a, 0x56, 0xce, 0xfa, 0x78, 0x0c, 0xe1, 0xfb, 0xf8, 0x92, 0xa1, 0x63, 0xd2,
	0x9e, 0xa2, 0x95, 0x73, 0xc1, 0xfe, 0x00, 0x21, 0x8f, 0x60, 0xa9, 0x66, 0xdb, 0x87, 0x7d, 0x1b,
	0xcb, 0xf9, 0x0d, 0xe9, 0xe6, 0xea, 0xf6, 0x56, 0x75, 0xac, 0x9a, 0xd5, 0x5a, 0x60, 0x0c, 0xdd,
	0xec, 0x2a, 0x26, 0xc3, 0xae, 0x43, 0x99, 0x6e, 0x99, 0x9c, 0xae, 0x15, 0x32, 0x20, 0xcf, 0xa0,
	0x60, 0x20, 0xa3, 0x1a, 0x65, 0xb4, 0xbc, 0xb0, 0x91, 0xbb, 0x59, 0xda, 0xde, 0x99, 0xc4, 0x2c,
	0xa9, 0x5b, 0xf5, 0xa9, 0x20, 0x6e, 0x9a, 0xcc, 0xe9, 0xb7, 0x22, 0x5e, 0x95, 0xbb, 0xb0, 0x32,
	0xb4, 0x45, 0xd6, 0x20, 0x77, 0x8a, 0x7d, 0x61, 0x05, 0xfe, 0x49, 0x2e, 0xc3, 0xc2, 0x19, 0xed,
	0x79, 0x28, 0x2c, 0x10, 0x2c, 0x76, 0xb2, 0x1f, 0x4b, 0x3b, 0xa5, 0xbf, 0x7e, 0xdf, 0x92, 0xbe,
	0xfc, 0x63, 0x2b, 0x47, 0xb1, 0x27, 0xff, 0x28, 0xc1, 0x7a, 0xdd, 0x41, 0xca, 0x30, 0x14, 0xdc,
	0xc2, 0x17, 0x1e, 0xba, 0x8c, 0x5c, 0x83, 0xa2, 0x6a, 0x19, 0x36, 0x35, 0xb9, 0x19, 0x03, 0xc6,
	0x03, 0x80, 0xdc, 0x85, 0x02, 0x0a, 0x02, 0x5f, 0x42, 0x69, 0xfb, 0x7a, 0x8a, 0x66, 0x11, 0xdf,
	0x88, 0x80, 0x9b, 0x98, 0x0a, 0x13, 0xe7, 0xfe, 0xa9, 0x89, 0x05, 0x03, 0xf9, 0x7b, 0x09, 0xd6,
	0x1b, 0xd8, 0xc3, 0x79, 0x15, 0xa8, 0x02, 0x09, 0x65, 0x86, 0x84, 0x51, 0xb8, 0x8c, 0xd9, 0x39,
	0xd7, 0x3b, 0xff, 0x22, 0xc1, 0xd5, 0xc0, 0xe8, 0xf7, 0x3d, 0x57, 0x37, 0xd1, 0x75, 0x1f, 0x5a,
	0x9e, 0x33, 0xdb, 0xbd, 0x1f, 0xc0, 0x72, 0x27, 0x46, 0x24, 0x8c, 0x7f, 0x23, 0xe5, 0x32, 0x43,
	0xfc, 0x87, 0x08, 0xcf, 0x55, 0xa1, 0x1f, 0x24, 0xb8, 0x1a, 0x38, 0x61, 0x7e, 0x85, 0xfe, 0x4b,
	0x47, 0x7c, 0x23, 0xc1, 0xf5, 0xc0, 0x11, 0x07, 0x0e, 0xda, 0x54, 0xd7, 0x6a, 0x01, 0x27, 0x03,
	0x4d, 0x36, 0xdb, 0xed, 0x3f, 0x05, 0x62, 0x8f, 0x90, 0x0a, 0xa7, 0xbc, 0x9b, 0x72, 0xb1, 0x31,
	0xb2, 0xc6, 0x30, 0x91, 0xbf, 0x93, 0xe0, 0x46, 0x9d, 0x9a, 0x2a, 0xf6, 0xf6, 0x5a, 0x78, 0xfc,
	0x3f, 0xbc, 0xe0, 0xa0, 0x76, 0xd4, 0x3d, 0x97, 0x59, 0x06, 0x3a, 0x33, 0xd7, 0x0e, 0x55, 0x10,
	0x4c, 0xa9, 0x1d, 0x11, 0xdf, 0x88, 0xe0, 0x5c, 0xdd, 0xef, 0xc0, 0x7a, 0x0b, 0x0d, 0xeb, 0xec,
	0x15, 0xde, 0x9f, 0xcb, 0x3c, 0xb2, 0xb5, 0x57, 0x6a, 0x33, 0xf9, 0x27, 0x09, 0xae, 0x04, 0x8e,
	0x52, 0xcc, 0x33, 0x34, 0x99, 0xe5, 0xf4, 0x63, 0x52, 0xeb, 0x42, 0x48, 0x23, 0x94, 0x1a, 0x01,
	0xe4, 0x1e, 0x14, 0xf5, 0x90, 0x42, 0x88, 0xdd, 0x48, 0x11, 0x3b, 0xe0, 0x3c, 0x20, 0x39, 0xdf,
	0x42, 0x9f, 0x87, 0x42, 0x58, 0x06, 0xe6, 0x6e, 0xfa, 0xd7, 0xa0, 0x78, 0xac, 0x3b, 0x2e, 0xdb,
	0xa3, 0x06, 0x8a, 0x9e, 0x3f, 0x00, 0x48, 0x05, 0x0a, 0x3d, 0x2a, 0x36, 0xf3, 0xfe, 0x66, 0xb4,
	0xe6, 0x7d, 0x14, 0x0d, 0xaa, 0xf7, 0xca, 0x0b, 0x41, 0x1f, 0xf5, 0x17, 0x44, 0x86, 0x65, 0xdb,
	0xb1, 0x8e, 0xf5, 0x1e, 0x2a, 0x06, 0xed, 0x62, 0x79, 0xd1, 0xdf, 0x1c, 0xc2, 0xc8, 0x87, 0xb0,
	0xd8, 0x45, 0x53, 0x43, 0xa7, 0xbc, 0xe4, 0xeb, 0xfe, 0x66, 0x8a, 0xee, 0x0f, 0xfc, 0x43, 0x2d,
	0x71, 0x98, 0xbc, 0x03, 0xab, 0x61, 0xa3, 0xdc, 0xf3, 0x8c, 0x0e, 0x3a, 0xe5, 0x82, 0xcf, 0x3c,
	0x81, 0x92, 0x0d, 0x28, 0xd9, 0x27, 0x96, 0x19, 0x1e, 0x2a, 0xfa, 0x87, 0xe2, 0x10, 0x37, 0x8a,
	0x86, 0x36, 0x75, 0x82, 0x94, 0x87, 0xc0, 0x28, 0x03, 0x84, 0x73, 0xd0, 0xd0, 0xd5, 0xbb, 0xa6,
	0x6f, 0xed, 0x72, 0x29, 0xe0, 0x10, 0x83, 0x88, 0x12, 0x7b, 0xbf, 0x2c, 0xfb, 0xef, 0x97, 0xdb,
	0x53, 0xba, 0x7c, 0xda, 0x93, 0x85, 0xdc, 0x81, 0xc2, 0x89, 0xee, 0x60, 0x83, 0x32, 0x2c, 0xaf,
	0xf8, 0x91, 0x54, 0xa9, 0x06, 0xcf, 0xc0, 0x6a, 0xf8, 0x0c, 0xac, 0x1e, 0x86, 0xef, 0xc4, 0x56,
	0x74, 0xf6, 0x5f, 0x3d, 0x75, 0xe4, 0x3f, 0x25, 0x58, 0x8e, 0x77, 0xa4, 0x94, 0x66, 0x23, 0xa5,
	0x36, 0x1b, 0xfe, 0x58, 0x4c, 0x36, 0xa5, 0x18, 0x42, 0x76, 0x00, 0x54, 0x3f, 0xb1, 0x7c, 0xbd,
	0x72, 0x53, 0xf5, 0x8a, 0x9d, 0x26, 0x04, 0xf2, 0xb1, 0x88, 0xf3, 0xbf, 0xb9, 0x4b, 0x1a, 0xe8,
	0xaa, 0x8e, 0x6e, 0xfb, 0x2e, 0x09, 0x62, 0x2e, 0x0e, 0xf1, 0x48, 0x3e, 0xb4, 0x18, 0xed, 0x71,
	0x9e, 0x22, 0xec, 0x06, 0x80, 0xfc, 0x75, 0x1e, 0xc8, 0x68, 0xf5, 0x9e, 0x3b, 0x5d, 0xde, 0x86,
	0x95, 0x03, 0xda, 0xe7, 0xa4, 0x6d, 0x46, 0x99, 0xe7, 0xfa, 0x9a, 0x15, 0x5a, 0xc3, 0x20, 0x3f,
	0xd5, 0x40, 0xdb, 0x72, 0x75, 0x86, 0x35, 0x55, 0x55, 0x34, 0xa1, 0xc9, 0x30, 0xc8, 0x65, 0x85,
	0x25, 0x49, 0xd1, 0x84, 0x46, 0x31, 0x84, 0xab, 0xec, 0xdf, 0xbf, 0x66, 0xf0, 0x0a, 0x20, 0x54,
	0x8a, 0x43, 0xfc, 0x44, 0xdd, 0x73, 0x1c, 0x34, 0xd5, 0x7e, 0x0b, 0x8f, 0xfd, 0x6c, 0x2a, 0xb6,
	0xe2, 0x10, 0xcf, 0x99, 0x90, 0xa3, 0xb8, 0xb0, 0xc8, 0x99, 0x61, 0x94, 0x1b, 0xaf, 0xdd, 0x37,
	0xd5, 0x43, 0xeb, 0x14, 0x4d, 0x91, 0x31, 0x03, 0x20, 0xe1, 0x4c, 0x98, 0xcb, 0x99, 0xed, 0x58,
	0xa6, 0x94, 0xfc, 0x4c, 0xf9, 0x68, 0xe6, 0xe6, 0x7a, 0x21, 0xcf, 0x7c, 0xf9, 0xdb, 0x3c, 0x14,
	0x42, 0xf5, 0xc7, 0x05, 0x40, 0x6d, 0x24, 0x00, 0x6a, 0x17, 0x57, 0x2f, 0x07, 0xb5, 0x70, 0x71,
	0x9e, 0x5a, 0x98, 0xa8, 0x71, 0x4b, 0xa3, 0x35, 0xae, 0x0c, 0x4b, 0x54, 0x55, 0x99, 0xe9, 0x19,
	0xc2, 0xe5, 0xe1, 0x92, 0x5f, 0x92, 0x7f, 0x32, 0xde, 0x7c, 0x02, 0x57, 0x47, 0x6b, 0xbe, 0xf7,
	0x4c, 0x77, 0x79, 0x50, 0xa0, 0xa8, 0x8b, 0xd1, 0x3a, 0x88, 0xb6, 0xc0, 0x6c, 0xfb, 0x4e, 0x37,
	0xac, 0x8a, 0x31, 0x28, 0x11, 0x27, 0xcb, 0x73, 0xc5, 0x49, 0xbc, 0xa2, 0xae, 0x4c, 0xac, 0xa8,
	0xa1, 0xc4, 0x8b, 0x89, 0x8e, 0x5f, 0x73, 0x50, 0x8c, 0x5a, 0x36, 0x0f, 0x8f, 0xa8, 0x0c, 0x66,
	0x83, 0x9c, 0x8c, 0x36, 0xa3, 0xf8, 0x88, 0x43, 0x51, 0xf1, 0xca, 0xc5, 0x8a, 0x57, 0x05, 0x0a,
	0x0a, 0x43, 0xa3, 0x6e, 0xb9, 0x2c, 0x0c, 0x8b, 0x70, 0xcd, 0x33, 0xf4, 0xc0, 0x73, 0xd4, 0x13,
	0xea, 0x62, 0x03, 0xd9, 0x20, 0x3e, 0x12, 0x68, 0xc8, 0x83, 0x57, 0x3c, 0x51, 0x0a, 0xa2, 0x35,
	0x6f, 0xba, 0xfc, 0x3b, 0xf2, 0x5c, 0x10, 0x0e, 0x43, 0xd8, 0x70, 0x86, 0x17, 0x92, 0x19, 0x7e,
	0x19, 0x16, 0x0e, 0x5f, 0x9a, 0x8a, 0x26, 0x02, 0x22, 0x58, 0x90, 0x7b, 0xb0, 0x1c, 0xdd, 0x62,
	0xb6, 0xcc, 0x1f, 0x3a, 0x4f, 0x1e, 0x8d, 0xe4, 0x7e, 0x75, 0xda, 0x23, 0xe9, 0x42, 0x9c, 0x7a,
	0x6b, 0x13, 0x16, 0x83, 0x04, 0x22, 0x97, 0xa0, 0x74, 0xb4, 0xd7, 0x3e, 0x68, 0xd6, 0x95, 0x5d,
	0xa5, 0xd9, 0x58, 0xcb, 0x90, 0x02, 0xe4, 0x9f, 0xd6, 0x9e, 0x34, 0xd7, 0x24, 0x02, 0xb0, 0xb8,
	0xdb, 0xf4, 0xbf, 0xb3, 0xb7, 0xda, 0x70, 0x35, 0xf5, 0xe5, 0x45, 0x56, 0xa0, 0x78, 0xb4, 0xd7,
	0x68, 0xee, 0x2a, 0x7b, 0x3e, 0x87, 0x55, 0x80, 0x4f, 0x8e, 0x94, 0xfa, 0xe3, 0xfb, 0xfb, 0xfb,
	0x8f, 0xdb, 0x6b, 0x12, 0xe7, 0xf8, 0xbc, 0xd9, 0xda, 0x5f, 0xcb, 0xf2, 0x83, 0xbb, 0xad, 0x66,
	0xfb, 0x21, 0xdf, 0x59, 0xcb, 0x6d, 0xff, 0x5c, 0x80, 0x4b, 0x2f, 0x3c, 0x5d, 0x3d, 0xed, 0x58,
	0xd6, 0x69, 0x1b, 0x9d, 0x33, 0x74, 0x08, 0x85, 0xd5, 0xe1, 0xbf, 0x0c, 0xe4, 0xbd, 0xb4, 0xb0,
	0x1f, 0xf7, 0x33, 0xa2, 0x32, 0xed, 0xe7, 0x82, 0x9c, 0x21, 0xcf, 0x61, 0x75, 0xf8, 0x3f, 0x40,
	0xaa, 0x88, 0xb1, 0xbf, 0x0b, 0x2a, 0x57, 0x46, 0xfc, 0xdd, 0x34, 0x6c, 0xd6, 0x97, 0x33, 0xc4,
	0x00, 0x32, 0x3a, 0xad, 0x93, 0xad, 0x89, 0x0a, 0x8c, 0x99, 0x83, 0x2b, 0xb3, 0x0c, 0xe9, 0x72,
	0x86, 0x50, 0x78, 0x7d, 0x74, 0x96, 0x76, 0x53, 0xe5, 0xa5, 0xce, 0xdd, 0x13, 0x34, 0xfa, 0x02,
	0xca, 0x69, 0x63, 0x2f, 0xb9, 0x33, 0x51, 0xaf, 0xd4, 0x31, 0xb4, 0x32, 0xfb, 0x30, 0x29, 0x67,
	0xc8, 0x57, 0x12, 0x5c, 0x9b, 0x34, 0xdb, 0x92, 0xb4, 0xff, 0x64, 0x33, 0x0c, 0xc4, 0xf3, 0xdd,
	0xe4, 0x24, 0x39, 0xc3, 0x8a, 0x84, 0x98, 0x12, 0xa0, 0x89, 0xe9, 0xad, 0x32, 0x6d, 0x1a, 0x93,
	0x33, 0xe4, 0xf3, 0xe4, 0xb4, 0x39, 0x4d, 0xd2, 0xd8, 0xd9, 0x74, 0x82, 0x57, 0x4f, 0x92, 0xa3,
	0xe5, 0x34, 0x01, 0x63, 0x07, 0xd1, 0x59, 0x54, 0xd1, 0xe0, 0x52, 0x62, 0x9e, 0x24, 0xb7, 0x27,
	0x9a, 0x2b, 0x39, 0x77, 0x56, 0xa6, 0x8e, 0x91, 0x72, 0xe6, 0x7e, 0xfe, 0xb3, 0xac, 0xdd, 0xe9,
	0x2c, 0xfa, 0x7a, 0x7e, 0xf0, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xdc, 0x26, 0x39, 0x30, 0x80,
	0x16, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QuickbookServerClient is the client API for QuickbookServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QuickbookServerClient interface {
	//Employee Actions
	CreateEmployee(ctx context.Context, in *CreateEmployeeRequest, opts ...grpc.CallOption) (*Employee, error)
	DeleteEmployee(ctx context.Context, in *DeleteEmployeeRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	//Timeactivity Actions
	CreateBusinessHour(ctx context.Context, in *CreateBusinessHourRequest, opts ...grpc.CallOption) (*BusinessHour, error)
	DeleteBusinessHours(ctx context.Context, in *DeleteBusinessHourRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	//RPC for prepaid appointment.
	CreatePrepaidAppointment(ctx context.Context, in *CreatePrepaidAppointmentRequest, opts ...grpc.CallOption) (*PrepaidAppointment, error)
	CancelNRefPrepaidAppointment(ctx context.Context, in *CancelNRefPrepaidAppointmentRequest, opts ...grpc.CallOption) (*PrepaidAppointment, error)
	//RPC for customer account.
	CreateCustomerAccount(ctx context.Context, in *CreateCustomerRequest, opts ...grpc.CallOption) (*Customer, error)
	RemoveCustomerAccount(ctx context.Context, in *RemoveCustomerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	UpdateCustomerAccount(ctx context.Context, in *UpdateCustomerRequest, opts ...grpc.CallOption) (*Customer, error)
	//RPCs for Addon/Product inventory
	CreateInventory(ctx context.Context, in *CreateInventoryRequest, opts ...grpc.CallOption) (*Inventory, error)
}

type quickbookServerClient struct {
	cc *grpc.ClientConn
}

func NewQuickbookServerClient(cc *grpc.ClientConn) QuickbookServerClient {
	return &quickbookServerClient{cc}
}

func (c *quickbookServerClient) CreateEmployee(ctx context.Context, in *CreateEmployeeRequest, opts ...grpc.CallOption) (*Employee, error) {
	out := new(Employee)
	err := c.cc.Invoke(ctx, "/appointy.accouting.v1.quickbookServer/CreateEmployee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quickbookServerClient) DeleteEmployee(ctx context.Context, in *DeleteEmployeeRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/appointy.accouting.v1.quickbookServer/DeleteEmployee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quickbookServerClient) CreateBusinessHour(ctx context.Context, in *CreateBusinessHourRequest, opts ...grpc.CallOption) (*BusinessHour, error) {
	out := new(BusinessHour)
	err := c.cc.Invoke(ctx, "/appointy.accouting.v1.quickbookServer/CreateBusinessHour", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quickbookServerClient) DeleteBusinessHours(ctx context.Context, in *DeleteBusinessHourRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/appointy.accouting.v1.quickbookServer/DeleteBusinessHours", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quickbookServerClient) CreatePrepaidAppointment(ctx context.Context, in *CreatePrepaidAppointmentRequest, opts ...grpc.CallOption) (*PrepaidAppointment, error) {
	out := new(PrepaidAppointment)
	err := c.cc.Invoke(ctx, "/appointy.accouting.v1.quickbookServer/CreatePrepaidAppointment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quickbookServerClient) CancelNRefPrepaidAppointment(ctx context.Context, in *CancelNRefPrepaidAppointmentRequest, opts ...grpc.CallOption) (*PrepaidAppointment, error) {
	out := new(PrepaidAppointment)
	err := c.cc.Invoke(ctx, "/appointy.accouting.v1.quickbookServer/CancelNRefPrepaidAppointment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quickbookServerClient) CreateCustomerAccount(ctx context.Context, in *CreateCustomerRequest, opts ...grpc.CallOption) (*Customer, error) {
	out := new(Customer)
	err := c.cc.Invoke(ctx, "/appointy.accouting.v1.quickbookServer/CreateCustomerAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quickbookServerClient) RemoveCustomerAccount(ctx context.Context, in *RemoveCustomerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/appointy.accouting.v1.quickbookServer/RemoveCustomerAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quickbookServerClient) UpdateCustomerAccount(ctx context.Context, in *UpdateCustomerRequest, opts ...grpc.CallOption) (*Customer, error) {
	out := new(Customer)
	err := c.cc.Invoke(ctx, "/appointy.accouting.v1.quickbookServer/UpdateCustomerAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quickbookServerClient) CreateInventory(ctx context.Context, in *CreateInventoryRequest, opts ...grpc.CallOption) (*Inventory, error) {
	out := new(Inventory)
	err := c.cc.Invoke(ctx, "/appointy.accouting.v1.quickbookServer/CreateInventory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QuickbookServerServer is the server API for QuickbookServer service.
type QuickbookServerServer interface {
	//Employee Actions
	CreateEmployee(context.Context, *CreateEmployeeRequest) (*Employee, error)
	DeleteEmployee(context.Context, *DeleteEmployeeRequest) (*empty.Empty, error)
	//Timeactivity Actions
	CreateBusinessHour(context.Context, *CreateBusinessHourRequest) (*BusinessHour, error)
	DeleteBusinessHours(context.Context, *DeleteBusinessHourRequest) (*empty.Empty, error)
	//RPC for prepaid appointment.
	CreatePrepaidAppointment(context.Context, *CreatePrepaidAppointmentRequest) (*PrepaidAppointment, error)
	CancelNRefPrepaidAppointment(context.Context, *CancelNRefPrepaidAppointmentRequest) (*PrepaidAppointment, error)
	//RPC for customer account.
	CreateCustomerAccount(context.Context, *CreateCustomerRequest) (*Customer, error)
	RemoveCustomerAccount(context.Context, *RemoveCustomerRequest) (*empty.Empty, error)
	UpdateCustomerAccount(context.Context, *UpdateCustomerRequest) (*Customer, error)
	//RPCs for Addon/Product inventory
	CreateInventory(context.Context, *CreateInventoryRequest) (*Inventory, error)
}

// UnimplementedQuickbookServerServer can be embedded to have forward compatible implementations.
type UnimplementedQuickbookServerServer struct {
}

func (*UnimplementedQuickbookServerServer) CreateEmployee(ctx context.Context, req *CreateEmployeeRequest) (*Employee, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEmployee not implemented")
}
func (*UnimplementedQuickbookServerServer) DeleteEmployee(ctx context.Context, req *DeleteEmployeeRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEmployee not implemented")
}
func (*UnimplementedQuickbookServerServer) CreateBusinessHour(ctx context.Context, req *CreateBusinessHourRequest) (*BusinessHour, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBusinessHour not implemented")
}
func (*UnimplementedQuickbookServerServer) DeleteBusinessHours(ctx context.Context, req *DeleteBusinessHourRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBusinessHours not implemented")
}
func (*UnimplementedQuickbookServerServer) CreatePrepaidAppointment(ctx context.Context, req *CreatePrepaidAppointmentRequest) (*PrepaidAppointment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePrepaidAppointment not implemented")
}
func (*UnimplementedQuickbookServerServer) CancelNRefPrepaidAppointment(ctx context.Context, req *CancelNRefPrepaidAppointmentRequest) (*PrepaidAppointment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelNRefPrepaidAppointment not implemented")
}
func (*UnimplementedQuickbookServerServer) CreateCustomerAccount(ctx context.Context, req *CreateCustomerRequest) (*Customer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCustomerAccount not implemented")
}
func (*UnimplementedQuickbookServerServer) RemoveCustomerAccount(ctx context.Context, req *RemoveCustomerRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveCustomerAccount not implemented")
}
func (*UnimplementedQuickbookServerServer) UpdateCustomerAccount(ctx context.Context, req *UpdateCustomerRequest) (*Customer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCustomerAccount not implemented")
}
func (*UnimplementedQuickbookServerServer) CreateInventory(ctx context.Context, req *CreateInventoryRequest) (*Inventory, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateInventory not implemented")
}

func RegisterQuickbookServerServer(s *grpc.Server, srv QuickbookServerServer) {
	s.RegisterService(&_QuickbookServer_serviceDesc, srv)
}

func _QuickbookServer_CreateEmployee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEmployeeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuickbookServerServer).CreateEmployee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appointy.accouting.v1.quickbookServer/CreateEmployee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuickbookServerServer).CreateEmployee(ctx, req.(*CreateEmployeeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QuickbookServer_DeleteEmployee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteEmployeeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuickbookServerServer).DeleteEmployee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appointy.accouting.v1.quickbookServer/DeleteEmployee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuickbookServerServer).DeleteEmployee(ctx, req.(*DeleteEmployeeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QuickbookServer_CreateBusinessHour_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBusinessHourRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuickbookServerServer).CreateBusinessHour(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appointy.accouting.v1.quickbookServer/CreateBusinessHour",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuickbookServerServer).CreateBusinessHour(ctx, req.(*CreateBusinessHourRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QuickbookServer_DeleteBusinessHours_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBusinessHourRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuickbookServerServer).DeleteBusinessHours(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appointy.accouting.v1.quickbookServer/DeleteBusinessHours",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuickbookServerServer).DeleteBusinessHours(ctx, req.(*DeleteBusinessHourRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QuickbookServer_CreatePrepaidAppointment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePrepaidAppointmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuickbookServerServer).CreatePrepaidAppointment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appointy.accouting.v1.quickbookServer/CreatePrepaidAppointment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuickbookServerServer).CreatePrepaidAppointment(ctx, req.(*CreatePrepaidAppointmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QuickbookServer_CancelNRefPrepaidAppointment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelNRefPrepaidAppointmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuickbookServerServer).CancelNRefPrepaidAppointment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appointy.accouting.v1.quickbookServer/CancelNRefPrepaidAppointment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuickbookServerServer).CancelNRefPrepaidAppointment(ctx, req.(*CancelNRefPrepaidAppointmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QuickbookServer_CreateCustomerAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuickbookServerServer).CreateCustomerAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appointy.accouting.v1.quickbookServer/CreateCustomerAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuickbookServerServer).CreateCustomerAccount(ctx, req.(*CreateCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QuickbookServer_RemoveCustomerAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuickbookServerServer).RemoveCustomerAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appointy.accouting.v1.quickbookServer/RemoveCustomerAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuickbookServerServer).RemoveCustomerAccount(ctx, req.(*RemoveCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QuickbookServer_UpdateCustomerAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuickbookServerServer).UpdateCustomerAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appointy.accouting.v1.quickbookServer/UpdateCustomerAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuickbookServerServer).UpdateCustomerAccount(ctx, req.(*UpdateCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QuickbookServer_CreateInventory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateInventoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuickbookServerServer).CreateInventory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appointy.accouting.v1.quickbookServer/CreateInventory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuickbookServerServer).CreateInventory(ctx, req.(*CreateInventoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _QuickbookServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appointy.accouting.v1.quickbookServer",
	HandlerType: (*QuickbookServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEmployee",
			Handler:    _QuickbookServer_CreateEmployee_Handler,
		},
		{
			MethodName: "DeleteEmployee",
			Handler:    _QuickbookServer_DeleteEmployee_Handler,
		},
		{
			MethodName: "CreateBusinessHour",
			Handler:    _QuickbookServer_CreateBusinessHour_Handler,
		},
		{
			MethodName: "DeleteBusinessHours",
			Handler:    _QuickbookServer_DeleteBusinessHours_Handler,
		},
		{
			MethodName: "CreatePrepaidAppointment",
			Handler:    _QuickbookServer_CreatePrepaidAppointment_Handler,
		},
		{
			MethodName: "CancelNRefPrepaidAppointment",
			Handler:    _QuickbookServer_CancelNRefPrepaidAppointment_Handler,
		},
		{
			MethodName: "CreateCustomerAccount",
			Handler:    _QuickbookServer_CreateCustomerAccount_Handler,
		},
		{
			MethodName: "RemoveCustomerAccount",
			Handler:    _QuickbookServer_RemoveCustomerAccount_Handler,
		},
		{
			MethodName: "UpdateCustomerAccount",
			Handler:    _QuickbookServer_UpdateCustomerAccount_Handler,
		},
		{
			MethodName: "CreateInventory",
			Handler:    _QuickbookServer_CreateInventory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/accounty.proto",
}
